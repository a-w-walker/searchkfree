Enter an integer k for which our Kempner sets are k-free: 4
Enter a positive integer modulus b: 30
Enter estimation parameters, or * for pre-computed parameters ([0.1297, 1.1382, 1.518]): *
Enter a threshold (e.g. 4.2) to determine printed output: 3.6
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[30, 3.72553, [0, 1, 2, 4, 5, 7, 8, 9, 14, 25]]
[30, 3.66968, [0, 1, 2, 4, 5, 7, 8, 13, 14, 27]]
[30, 3.66336, [0, 1, 2, 4, 5, 7, 8, 13, 18, 21]]
[30, 3.64383, [0, 1, 2, 4, 5, 7, 8, 13, 18, 27]]
[30, 3.60767, [0, 1, 2, 4, 5, 7, 8, 14, 25, 27]]
[30, 3.60446, [0, 1, 2, 4, 5, 7, 8, 18, 21, 24]]
[30, 3.78559, [0, 1, 2, 4, 5, 7, 8, 18, 24, 25, 27]]
[30, 3.86779, [0, 1, 2, 4, 5, 7, 9, 12, 14, 25, 26]]
[30, 3.66303, [0, 1, 2, 4, 5, 7, 9, 12, 14, 26]]
[30, 3.60959, [0, 1, 2, 4, 5, 7, 9, 12, 25, 26]]
[30, 3.67307, [0, 1, 2, 4, 5, 7, 11, 12, 13, 18]]
[30, 3.63689, [0, 1, 2, 4, 5, 7, 11, 12, 14, 25]]
[30, 3.62148, [0, 1, 2, 4, 5, 7, 11, 13, 14, 27]]
[30, 3.60772, [0, 1, 2, 4, 5, 7, 11, 13, 18, 23]]
[30, 3.61291, [0, 1, 2, 4, 5, 7, 12, 13, 14, 26]]
[30, 3.60385, [0, 1, 2, 4, 5, 7, 12, 13, 18, 21]]
[30, 3.71146, [0, 1, 2, 4, 5, 7, 12, 21, 24, 25, 26]]
[30, 3.66509, [0, 1, 2, 4, 5, 7, 18, 21, 24, 25, 26]]
[30, 3.65596, [0, 1, 2, 4, 5, 7, 18, 21, 25, 26, 27]]
[30, 3.68055, [0, 1, 2, 4, 5, 8, 9, 10, 14, 21]]
[30, 3.6371, [0, 1, 2, 4, 5, 8, 9, 10, 21, 22]]
[30, 3.62845, [0, 1, 2, 4, 5, 9, 10, 11, 14, 22]]
[30, 3.60425, [0, 1, 2, 4, 5, 9, 10, 12, 14, 26]]
[30, 3.66637, [0, 1, 2, 4, 5, 12, 13, 14, 21, 25, 26]]
[30, 3.60953, [0, 1, 2, 4, 7, 8, 9, 11, 14, 18]]
[30, 3.63303, [0, 1, 2, 5, 6, 7, 9, 10, 12, 19]]
[30, 3.81599, [0, 1, 2, 5, 6, 7, 9, 10, 12, 23, 26]]
[30, 3.60763, [0, 1, 2, 5, 6, 7, 9, 10, 12, 26]]
[30, 3.76413, [0, 1, 2, 5, 6, 7, 9, 12, 14, 25, 26]]
[30, 3.60401, [0, 1, 2, 5, 6, 7, 10, 11, 12, 19]]
[30, 3.80704, [0, 1, 2, 5, 6, 7, 10, 11, 13, 18, 23]]
[30, 3.79443, [0, 1, 2, 5, 6, 7, 10, 11, 13, 18, 27]]
[30, 3.76322, [0, 1, 2, 5, 6, 7, 10, 12, 13, 23, 26]]
[30, 3.63755, [0, 1, 2, 5, 6, 7, 10, 19, 24, 26, 27]]
[30, 3.67891, [0, 1, 2, 5, 6, 7, 11, 12, 23, 25, 28]]
[30, 3.65889, [0, 1, 2, 5, 6, 7, 11, 14, 24, 25, 27]]
[30, 3.64715, [0, 1, 2, 5, 6, 7, 11, 14, 25, 27, 28]]
[30, 3.76567, [0, 1, 2, 5, 6, 8, 9, 12, 14, 19, 25]]
[30, 3.682, [0, 1, 2, 5, 6, 8, 9, 14, 19, 25, 28]]
[30, 3.71492, [0, 1, 2, 5, 6, 9, 11, 12, 14, 19, 25]]
[30, 3.63139, [0, 1, 2, 5, 6, 9, 11, 14, 19, 25, 28]]
[30, 3.64159, [0, 1, 2, 5, 7, 8, 12, 13, 18, 21, 26]]
[30, 3.67628, [0, 1, 2, 5, 7, 9, 10, 12, 18, 19, 23]]
[30, 3.64425, [0, 1, 2, 5, 7, 9, 10, 12, 18, 23, 28]]
[30, 3.66932, [0, 1, 2, 5, 7, 10, 11, 12, 14, 19, 24]]
[30, 3.64577, [0, 1, 2, 5, 7, 10, 11, 12, 18, 19, 23]]
[30, 3.61379, [0, 1, 2, 5, 7, 10, 11, 12, 18, 23, 28]]
[30, 3.62029, [0, 1, 2, 5, 7, 10, 11, 12, 19, 23, 24]]
[30, 3.69399, [0, 1, 2, 6, 7, 8, 10, 11, 13, 18, 27]]
[30, 3.6685, [0, 1, 2, 6, 7, 8, 10, 11, 13, 24, 27]]
[30, 3.62354, [0, 1, 2, 6, 7, 8, 11, 13, 14, 24, 27]]
[30, 3.61227, [0, 1, 2, 6, 7, 9, 11, 14, 18, 19, 20]]
[30, 3.73787, [0, 1, 3, 4, 5, 8, 9, 10, 14, 17, 28]]
[30, 3.64639, [0, 1, 3, 4, 5, 8, 10, 11, 17, 27, 28]]
[30, 3.68734, [0, 1, 3, 4, 5, 9, 10, 11, 14, 17, 28]]
[30, 3.65983, [0, 1, 3, 4, 5, 9, 10, 11, 14, 23, 28]]
[30, 3.69422, [0, 1, 3, 4, 5, 9, 10, 12, 14, 17, 22]]
[30, 3.60666, [0, 1, 3, 4, 5, 9, 10, 14, 21, 22, 23]]
[30, 3.78336, [0, 1, 3, 4, 6, 7, 8, 11, 13, 14, 20]]
[30, 3.64175, [0, 1, 3, 4, 7, 8, 9, 11, 14, 20, 25]]

Search completed in 0 hours, 0 minutes, and 0.053 seconds.  Enter a string to quit.