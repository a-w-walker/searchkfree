Enter an integer k for which our Kempner sets are k-free: 4
Enter a positive integer modulus b: 29
Enter estimation parameters, or * for pre-computed parameters ([0.1319, 1.1409, 1.5243]): *
Enter a threshold (e.g. 4.2) to determine printed output: 3.85
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[29, 4.07007, [0, 1, 2, 4, 5, 7, 8, 9, 14, 16, 18]]
[29, 4.03447, [0, 1, 2, 4, 5, 7, 8, 9, 14, 18, 23]]
[29, 4.04983, [0, 1, 2, 4, 5, 7, 8, 9, 15, 17, 19]]
[29, 4.04031, [0, 1, 2, 4, 5, 7, 8, 9, 15, 17, 21]]
[29, 4.02893, [0, 1, 2, 4, 5, 7, 8, 9, 15, 19, 21]]
[29, 4.02397, [0, 1, 2, 4, 5, 7, 8, 9, 15, 20, 21]]
[29, 4.01224, [0, 1, 2, 4, 5, 7, 8, 9, 15, 20, 24]]
[29, 4.02281, [0, 1, 2, 4, 5, 7, 8, 9, 16, 18, 22]]
[29, 4.01739, [0, 1, 2, 4, 5, 7, 8, 9, 16, 19, 22]]
[29, 4.01244, [0, 1, 2, 4, 5, 7, 8, 9, 16, 20, 22]]
[29, 4.01233, [0, 1, 2, 4, 5, 7, 8, 9, 17, 18, 23]]
[29, 4.01501, [0, 1, 2, 4, 5, 7, 8, 9, 17, 19, 21]]
[29, 4.00691, [0, 1, 2, 4, 5, 7, 8, 9, 17, 19, 23]]
[29, 3.99741, [0, 1, 2, 4, 5, 7, 8, 9, 17, 21, 23]]
[29, 3.98604, [0, 1, 2, 4, 5, 7, 8, 9, 19, 21, 23]]
[29, 3.97327, [0, 1, 2, 4, 5, 7, 8, 9, 20, 22, 24]]
[29, 4.01558, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 18]]
[29, 3.97715, [0, 1, 2, 4, 5, 7, 8, 13, 16, 18, 20]]
[29, 3.92483, [0, 1, 2, 4, 5, 7, 8, 13, 17, 23, 26]]
[29, 3.94508, [0, 1, 2, 4, 5, 7, 8, 14, 16, 18, 26]]
[29, 3.90962, [0, 1, 2, 4, 5, 7, 8, 14, 18, 23, 26]]
[29, 3.90672, [0, 1, 2, 4, 5, 7, 8, 16, 18, 20, 26]]
[29, 3.88756, [0, 1, 2, 4, 5, 7, 8, 17, 18, 23, 26]]
[29, 3.86102, [0, 1, 2, 4, 5, 7, 8, 17, 23, 24, 26]]
[29, 3.99502, [0, 1, 2, 4, 5, 7, 9, 12, 14, 16, 20]]
[29, 3.96433, [0, 1, 2, 4, 5, 7, 9, 12, 15, 19, 21]]
[29, 3.94926, [0, 1, 2, 4, 5, 7, 9, 12, 15, 19, 25]]
[29, 3.95939, [0, 1, 2, 4, 5, 7, 9, 12, 15, 20, 21]]
[29, 3.95823, [0, 1, 2, 4, 5, 7, 9, 12, 16, 18, 22]]
[29, 3.95282, [0, 1, 2, 4, 5, 7, 9, 12, 16, 19, 22]]
[29, 3.94788, [0, 1, 2, 4, 5, 7, 9, 12, 16, 20, 22]]
[29, 3.88494, [0, 1, 2, 4, 5, 7, 9, 15, 20, 21, 24]]
[29, 3.85465, [0, 1, 2, 4, 5, 7, 9, 19, 21, 22, 23]]
[29, 3.9605, [0, 1, 2, 4, 5, 7, 11, 12, 13, 15, 25]]
[29, 3.88774, [0, 1, 2, 4, 5, 7, 11, 13, 14, 25, 26]]
[29, 3.87955, [0, 1, 2, 4, 5, 7, 11, 13, 15, 25, 26]]
[29, 3.8657, [0, 1, 2, 4, 5, 7, 11, 13, 17, 25, 26]]
[29, 3.86996, [0, 1, 2, 4, 5, 7, 11, 14, 16, 23, 26]]
[29, 3.85162, [0, 1, 2, 4, 5, 7, 11, 15, 17, 24, 26]]
[29, 3.94063, [0, 1, 2, 4, 5, 7, 12, 13, 14, 16, 20]]
[29, 3.92812, [0, 1, 2, 4, 5, 7, 12, 13, 14, 18, 20]]
[29, 3.91262, [0, 1, 2, 4, 5, 7, 12, 13, 16, 18, 20]]
[29, 4.00616, [0, 1, 2, 4, 5, 8, 9, 10, 14, 16, 18]]
[29, 3.95575, [0, 1, 2, 4, 5, 8, 9, 10, 14, 21, 23]]
[29, 3.93367, [0, 1, 2, 4, 5, 8, 9, 10, 17, 21, 23]]
[29, 3.95175, [0, 1, 2, 4, 5, 8, 10, 13, 14, 16, 18]]
[29, 3.88885, [0, 1, 2, 4, 5, 8, 10, 13, 17, 19, 23]]
[29, 3.85462, [0, 1, 2, 4, 5, 8, 10, 14, 19, 22, 23]]
[29, 3.95383, [0, 1, 2, 4, 5, 9, 10, 11, 14, 16, 18]]
[29, 3.89917, [0, 1, 2, 4, 5, 9, 10, 12, 14, 18, 25]]
[29, 3.88367, [0, 1, 2, 4, 5, 9, 10, 12, 16, 18, 25]]
[29, 3.87124, [0, 1, 2, 4, 5, 9, 11, 12, 15, 19, 25]]
[29, 3.86394, [0, 1, 2, 4, 5, 9, 11, 12, 16, 19, 25]]
[29, 3.86234, [0, 1, 2, 4, 5, 10, 11, 12, 14, 19, 25]]
[29, 3.89948, [0, 1, 2, 4, 5, 10, 11, 13, 14, 16, 18]]
[29, 3.89142, [0, 1, 2, 4, 7, 8, 9, 13, 14, 16, 18]]
[29, 3.87669, [0, 1, 2, 4, 7, 8, 9, 13, 15, 17, 18]]
[29, 3.9261, [0, 1, 2, 5, 6, 7, 9, 10, 12, 16, 22]]
[29, 3.87833, [0, 1, 2, 5, 6, 7, 9, 10, 16, 18, 22]]
[29, 3.88836, [0, 1, 2, 5, 6, 7, 9, 12, 14, 16, 20]]
[29, 3.85056, [0, 1, 2, 5, 6, 7, 9, 12, 16, 19, 21]]
[29, 3.87682, [0, 1, 2, 5, 6, 7, 10, 11, 12, 19, 22]]
[29, 3.85252, [0, 1, 2, 5, 6, 8, 9, 10, 16, 18, 22]]

Search completed in 0 hours, 0 minutes, and 0.091 seconds.  Enter a string to quit.