Enter an integer k for which our Kempner sets are k-free: 4
Enter a positive integer modulus b: 58
Enter estimation parameters, or * for pre-computed parameters ([0.1007, 1.1022, 1.4462]): *
Enter a threshold (e.g. 4.2) to determine printed output: 4.0
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[58, 4.04277, [0, 1, 2, 4, 5, 7, 8, 9, 15, 17, 18, 19, 24, 26, 28, 39, 42, 45]]
[58, 4.00419, [0, 1, 2, 4, 5, 7, 8, 9, 15, 17, 18, 19, 26, 28, 39, 42, 45, 53]]
[58, 4.04935, [0, 1, 2, 4, 5, 7, 8, 9, 15, 18, 19, 20, 23, 24, 25, 28, 50, 51]]
[58, 4.04207, [0, 1, 2, 4, 5, 7, 8, 9, 15, 18, 19, 20, 23, 24, 25, 32, 50, 51]]
[58, 4.01933, [0, 1, 2, 4, 5, 7, 8, 9, 16, 17, 19, 20, 21, 28, 35, 41, 43, 44]]
[58, 4.00984, [0, 1, 2, 4, 5, 7, 8, 9, 16, 17, 19, 20, 21, 28, 35, 43, 44, 52]]
[58, 4.01994, [0, 1, 2, 4, 5, 7, 8, 9, 18, 19, 20, 22, 23, 25, 26, 32, 35, 53]]
[58, 4.00467, [0, 1, 2, 4, 5, 7, 8, 9, 18, 19, 20, 22, 23, 25, 26, 32, 50, 53]]
[58, 4.05778, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 22, 25, 27, 28, 35, 41]]
[58, 4.02514, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 22, 25, 28, 35, 41, 55]]
[58, 4.01787, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 22, 25, 32, 35, 41, 55]]
[58, 4.02553, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 22, 27, 28, 35, 41, 48]]
[58, 4.01334, [0, 1, 2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 25, 27, 32, 35, 41, 44]]
[58, 4.02452, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 17, 20, 21, 23, 32, 35, 38, 43]]
[58, 4.04825, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 18, 20, 21, 25, 26, 27, 32, 43]]
[58, 4.01611, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 18, 20, 21, 25, 27, 32, 43, 51]]
[58, 4.03174, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 18, 20, 21, 26, 27, 32, 35, 41]]
[58, 4.02971, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 18, 20, 21, 26, 27, 32, 35, 43]]
[58, 4.01165, [0, 1, 2, 4, 5, 7, 8, 13, 15, 16, 20, 21, 23, 26, 27, 32, 35, 43]]
[58, 4.00308, [0, 1, 2, 4, 5, 7, 8, 13, 15, 17, 20, 21, 23, 24, 27, 32, 38, 48]]
[58, 4.0141, [0, 1, 2, 4, 5, 7, 8, 13, 16, 17, 18, 20, 21, 26, 27, 28, 41, 48]]
[58, 4.01183, [0, 1, 2, 4, 5, 7, 8, 14, 15, 17, 18, 19, 23, 24, 26, 28, 45, 50]]
[58, 4.00847, [0, 1, 2, 4, 5, 7, 8, 14, 15, 17, 18, 19, 23, 24, 26, 28, 49, 50]]
[58, 4.012, [0, 1, 2, 4, 5, 7, 8, 14, 15, 17, 18, 19, 24, 26, 27, 28, 39, 45]]
[58, 4.00302, [0, 1, 2, 4, 5, 7, 8, 14, 16, 17, 18, 22, 23, 25, 27, 28, 35, 48]]
[58, 4.00155, [0, 1, 2, 4, 5, 7, 8, 14, 16, 17, 18, 25, 32, 38, 40, 41, 44, 53, 55]]
[58, 4.03948, [0, 1, 2, 4, 5, 7, 8, 16, 17, 18, 21, 22, 25, 26, 28, 39, 43, 48, 49]]
[58, 4.00696, [0, 1, 2, 4, 5, 7, 11, 12, 13, 15, 16, 20, 21, 22, 25, 43, 46, 52]]
[58, 4.03794, [0, 1, 2, 4, 5, 7, 11, 12, 13, 15, 16, 21, 22, 23, 25, 28, 38, 39]]
[58, 4.0223, [0, 1, 2, 4, 5, 7, 11, 12, 13, 15, 16, 21, 22, 24, 25, 28, 39, 52]]
[58, 4.00736, [0, 1, 2, 4, 5, 7, 11, 12, 13, 15, 20, 21, 22, 24, 25, 27, 38, 52]]
[58, 4.05377, [0, 1, 2, 4, 5, 7, 11, 13, 16, 17, 18, 20, 21, 27, 32, 35, 41, 44, 54]]
[58, 4.04735, [0, 1, 2, 4, 5, 7, 12, 13, 16, 18, 20, 21, 25, 26, 27, 32, 35, 43, 44]]
[58, 4.01859, [0, 1, 2, 4, 5, 9, 11, 12, 14, 15, 17, 24, 26, 27, 32, 35, 42, 49, 54]]
[58, 4.0325, [0, 1, 2, 4, 5, 9, 11, 12, 15, 16, 17, 19, 24, 27, 28, 37, 42, 49, 54]]
[58, 4.04503, [0, 1, 2, 4, 5, 10, 11, 12, 14, 17, 18, 19, 21, 24, 32, 35, 37, 38, 51]]
[58, 4.01514, [0, 1, 2, 4, 5, 10, 11, 13, 14, 17, 19, 21, 24, 26, 27, 32, 37, 44, 54]]
[58, 4.00925, [0, 1, 2, 4, 5, 10, 11, 13, 14, 17, 19, 21, 24, 26, 27, 32, 37, 51, 54]]
[58, 4.03728, [0, 1, 2, 4, 5, 10, 12, 13, 14, 17, 19, 20, 21, 24, 27, 32, 37, 38, 44]]
[58, 4.00715, [0, 1, 2, 4, 7, 8, 9, 11, 15, 17, 21, 23, 24, 26, 28, 32, 39, 42, 48]]
[58, 4.004, [0, 1, 2, 5, 6, 7, 11, 13, 14, 15, 18, 22, 24, 25, 27, 28, 38, 39, 52]]

Search completed in 0 hours, 0 minutes, and 30.872 seconds.  Enter a string to quit.