Enter an integer k for which our Kempner sets are k-free: 3
Enter a positive integer modulus b: 64
Enter estimation parameters, or * for pre-computed parameters ([0.0963, 1.0998, 1.4278]): *
Enter a threshold (e.g. 4.2) to determine printed output: 2.75
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[64, 2.86728, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 30, 31]]
[64, 2.78798, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 31]]
[64, 2.77169, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 49]]
[64, 2.7878, [0, 1, 3, 4, 9, 10, 12, 13, 27, 29, 30]]
[64, 2.78491, [0, 1, 3, 4, 9, 10, 12, 13, 27, 30, 31]]
[64, 2.75155, [0, 1, 3, 4, 9, 10, 12, 13, 27, 48, 49]]
[64, 2.78471, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 31]]
[64, 2.76782, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 50]]
[64, 2.78323, [0, 1, 3, 4, 9, 10, 12, 13, 28, 30, 31]]
[64, 2.7644, [0, 1, 3, 4, 9, 10, 12, 13, 30, 31, 46]]
[64, 2.79129, [0, 1, 3, 4, 9, 10, 12, 13, 46, 47, 49, 50]]
[64, 2.8389, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 29, 31]]
[64, 2.75869, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 31]]
[64, 2.83554, [0, 1, 3, 4, 9, 10, 12, 22, 25, 27, 30, 31]]
[64, 2.75689, [0, 1, 3, 4, 9, 10, 12, 22, 25, 27, 31]]
[64, 2.75502, [0, 1, 3, 4, 9, 10, 12, 22, 25, 29, 30]]
[64, 2.75362, [0, 1, 3, 4, 9, 10, 12, 22, 25, 29, 31]]
[64, 2.75214, [0, 1, 3, 4, 9, 10, 12, 22, 25, 30, 31]]
[64, 2.75784, [0, 1, 3, 4, 9, 10, 12, 22, 26, 27, 29]]
[64, 2.75496, [0, 1, 3, 4, 9, 10, 12, 22, 26, 27, 31]]
[64, 2.83337, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 29, 31]]
[64, 2.75327, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 31]]
[64, 2.75169, [0, 1, 3, 4, 9, 10, 12, 22, 26, 29, 31]]
[64, 2.83002, [0, 1, 3, 4, 9, 10, 12, 22, 27, 28, 30, 31]]
[64, 2.75147, [0, 1, 3, 4, 9, 10, 12, 22, 27, 28, 31]]
[64, 2.75129, [0, 1, 3, 4, 9, 10, 12, 22, 27, 29, 30]]
[64, 2.75119, [0, 1, 3, 4, 9, 10, 12, 22, 46, 47, 51, 53]]
[64, 2.8314, [0, 1, 3, 4, 9, 10, 13, 21, 24, 28, 30, 31]]
[64, 2.81278, [0, 1, 3, 4, 9, 10, 13, 21, 24, 28, 31, 50]]
[64, 2.82548, [0, 1, 3, 4, 9, 10, 13, 21, 27, 28, 30, 31]]
[64, 2.80407, [0, 1, 3, 4, 9, 10, 13, 21, 27, 28, 30, 58]]
[64, 2.7961, [0, 1, 3, 4, 9, 10, 13, 24, 28, 29, 31, 50]]
[64, 2.79968, [0, 1, 3, 4, 9, 10, 21, 22, 24, 25, 30, 31]]
[64, 2.79567, [0, 1, 3, 4, 9, 10, 21, 22, 24, 28, 29, 31]]
[64, 2.77382, [0, 1, 3, 4, 9, 10, 21, 22, 24, 28, 29, 59]]
[64, 2.79415, [0, 1, 3, 4, 9, 10, 21, 22, 24, 28, 30, 31]]
[64, 2.75094, [0, 1, 3, 4, 9, 10, 21, 22, 24, 29, 52, 59]]
[64, 2.79376, [0, 1, 3, 4, 9, 10, 21, 22, 25, 27, 30, 31]]
[64, 2.78823, [0, 1, 3, 4, 9, 10, 21, 22, 27, 28, 30, 31]]
[64, 2.85497, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 29, 31, 50]]
[64, 2.77602, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 29, 50]]
[64, 2.79168, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 30, 31]]
[64, 2.77308, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 31, 50]]
[64, 2.77147, [0, 1, 3, 4, 9, 10, 21, 23, 24, 29, 31, 50]]
[64, 2.75315, [0, 1, 3, 4, 9, 10, 21, 23, 24, 29, 50, 52]]
[64, 2.76438, [0, 1, 3, 4, 9, 10, 21, 23, 27, 28, 30, 58]]
[64, 2.75303, [0, 1, 3, 4, 9, 10, 21, 23, 27, 28, 40, 58]]
[64, 2.83243, [0, 1, 3, 4, 9, 10, 21, 23, 28, 29, 31, 40, 50]]
[64, 2.76384, [0, 1, 3, 4, 9, 10, 21, 23, 28, 29, 31, 50]]
[64, 2.75392, [0, 1, 3, 4, 9, 10, 21, 23, 28, 29, 40, 50]]
[64, 2.75098, [0, 1, 3, 4, 9, 10, 21, 23, 28, 31, 40, 50]]
[64, 2.76156, [0, 1, 3, 4, 9, 10, 21, 24, 28, 29, 31, 50]]
[64, 2.75641, [0, 1, 3, 4, 9, 10, 23, 24, 28, 29, 31, 50]]
[64, 2.77056, [0, 1, 3, 4, 9, 11, 12, 16, 25, 26, 30]]
[64, 2.76876, [0, 1, 3, 4, 9, 11, 12, 16, 25, 27, 30]]
[64, 2.76683, [0, 1, 3, 4, 9, 11, 12, 16, 26, 27, 30]]
[64, 2.80715, [0, 1, 3, 4, 9, 11, 23, 24, 26, 30, 31, 50, 54]]
[64, 2.81328, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 30, 31]]
[64, 2.77604, [0, 1, 3, 4, 9, 12, 19, 22, 27, 28, 30, 31]]
[64, 2.83887, [0, 1, 3, 4, 9, 13, 19, 21, 24, 28, 30, 31, 50]]
[64, 2.76026, [0, 1, 3, 4, 9, 13, 19, 21, 24, 28, 30, 50]]
[64, 2.75883, [0, 1, 3, 4, 9, 13, 19, 21, 24, 28, 31, 50]]
[64, 2.75571, [0, 1, 3, 4, 9, 13, 19, 21, 24, 30, 31, 50]]
[64, 2.77151, [0, 1, 3, 4, 9, 13, 19, 21, 27, 28, 30, 31]]
[64, 2.75014, [0, 1, 3, 4, 9, 13, 19, 21, 27, 28, 30, 58]]
[64, 2.76225, [0, 1, 3, 4, 9, 19, 23, 24, 26, 30, 31, 50, 54]]
[64, 2.77431, [0, 1, 3, 4, 10, 11, 13, 24, 28, 29, 31, 50]]
[64, 2.80492, [0, 1, 3, 4, 10, 12, 13, 18, 27, 28, 30, 31]]
[64, 2.78044, [0, 1, 3, 4, 10, 12, 13, 18, 27, 30, 31, 55]]
[64, 2.83175, [0, 1, 3, 4, 10, 12, 18, 22, 25, 27, 30, 31, 55]]
[64, 2.75329, [0, 1, 3, 4, 10, 12, 18, 22, 25, 27, 30, 55]]
[64, 2.75187, [0, 1, 3, 4, 10, 12, 18, 22, 25, 27, 31, 55]]
[64, 2.75213, [0, 1, 3, 4, 10, 12, 18, 22, 25, 29, 30, 51]]
[64, 2.75071, [0, 1, 3, 4, 10, 12, 18, 22, 25, 29, 31, 51]]
[64, 2.80728, [0, 1, 3, 4, 10, 12, 18, 22, 25, 30, 31, 51, 55]]
[64, 2.76769, [0, 1, 3, 4, 10, 12, 18, 22, 27, 28, 30, 31]]
[64, 2.76315, [0, 1, 3, 4, 10, 13, 18, 21, 27, 28, 30, 31]]
[64, 2.76351, [0, 1, 3, 4, 10, 18, 22, 23, 25, 29, 30, 51, 53]]
[64, 2.75096, [0, 1, 3, 4, 12, 13, 18, 19, 27, 28, 30, 31]]
[64, 2.8165, [0, 1, 3, 7, 8, 10, 18, 21, 22, 25, 27, 30, 31]]
[64, 2.80685, [0, 1, 3, 7, 8, 10, 18, 21, 22, 25, 27, 31, 38]]
[64, 2.79109, [0, 1, 3, 7, 8, 10, 18, 21, 25, 27, 30, 31, 38]]
[64, 2.77996, [0, 1, 4, 6, 9, 10, 13, 21, 23, 24, 28, 30, 31]]

Search completed in 0 hours, 0 minutes, and 0.521 seconds.  Enter a string to quit.