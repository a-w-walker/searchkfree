Enter an integer k for which our Kempner sets are k-free: 3
Enter a positive integer modulus b: 66
Enter estimation parameters, or * for pre-computed parameters ([0.0951, 1.0996, 1.4229]): *
Enter a threshold (e.g. 4.2) to determine printed output: 2.76
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[66, 2.85218, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 30, 31]]
[66, 2.84944, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 31, 32]]
[66, 2.77336, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 32]]
[66, 2.84926, [0, 1, 3, 4, 9, 10, 12, 13, 27, 29, 30, 32]]
[66, 2.7718, [0, 1, 3, 4, 9, 10, 12, 13, 27, 29, 32]]
[66, 2.77164, [0, 1, 3, 4, 9, 10, 12, 13, 27, 30, 31]]
[66, 2.77033, [0, 1, 3, 4, 9, 10, 12, 13, 27, 30, 32]]
[66, 2.81317, [0, 1, 3, 4, 9, 10, 12, 13, 27, 30, 49, 52]]
[66, 2.76895, [0, 1, 3, 4, 9, 10, 12, 13, 27, 31, 32]]
[66, 2.84615, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 31, 32]]
[66, 2.82991, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 31, 51]]
[66, 2.82916, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 32, 50]]
[66, 2.81293, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 50, 51]]
[66, 2.76997, [0, 1, 3, 4, 9, 10, 12, 13, 28, 30, 31]]
[66, 2.82748, [0, 1, 3, 4, 9, 10, 12, 13, 28, 31, 32, 48]]
[66, 2.81125, [0, 1, 3, 4, 9, 10, 12, 13, 28, 31, 48, 51]]
[66, 2.8105, [0, 1, 3, 4, 9, 10, 12, 13, 28, 32, 48, 50]]
[66, 2.79427, [0, 1, 3, 4, 9, 10, 12, 13, 28, 48, 50, 51]]
[66, 2.7671, [0, 1, 3, 4, 9, 10, 12, 13, 29, 30, 32]]
[66, 2.82653, [0, 1, 3, 4, 9, 10, 12, 13, 29, 31, 32, 47]]
[66, 2.8103, [0, 1, 3, 4, 9, 10, 12, 13, 29, 31, 47, 51]]
[66, 2.80955, [0, 1, 3, 4, 9, 10, 12, 13, 29, 32, 47, 50]]
[66, 2.79332, [0, 1, 3, 4, 9, 10, 12, 13, 29, 47, 50, 51]]
[66, 2.80787, [0, 1, 3, 4, 9, 10, 12, 13, 31, 32, 47, 48]]
[66, 2.79164, [0, 1, 3, 4, 9, 10, 12, 13, 31, 47, 48, 51]]
[66, 2.79089, [0, 1, 3, 4, 9, 10, 12, 13, 32, 47, 48, 50]]
[66, 2.77467, [0, 1, 3, 4, 9, 10, 12, 13, 47, 48, 50, 51]]
[66, 2.77353, [0, 1, 3, 4, 9, 10, 12, 13, 47, 48, 51, 52]]
[66, 2.77349, [0, 1, 3, 4, 9, 10, 12, 13, 47, 49, 50, 52]]
[66, 2.77226, [0, 1, 3, 4, 9, 10, 12, 13, 48, 49, 51, 52]]
[66, 2.82407, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 29, 31]]
[66, 2.80541, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 29, 53]]
[66, 2.82075, [0, 1, 3, 4, 9, 10, 12, 22, 25, 27, 30, 31]]
[66, 2.7985, [0, 1, 3, 4, 9, 10, 12, 22, 25, 29, 31, 51]]
[66, 2.77985, [0, 1, 3, 4, 9, 10, 12, 22, 25, 29, 51, 53]]
[66, 2.77985, [0, 1, 3, 4, 9, 10, 12, 22, 25, 31, 48, 51]]
[66, 2.76121, [0, 1, 3, 4, 9, 10, 12, 22, 25, 48, 51, 53]]
[66, 2.81861, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 29, 31]]
[66, 2.799, [0, 1, 3, 4, 9, 10, 12, 22, 26, 29, 31, 47]]
[66, 2.78035, [0, 1, 3, 4, 9, 10, 12, 22, 26, 29, 47, 53]]
[66, 2.81529, [0, 1, 3, 4, 9, 10, 12, 22, 27, 28, 30, 31]]
[66, 2.79304, [0, 1, 3, 4, 9, 10, 12, 22, 28, 29, 31, 51]]
[66, 2.77439, [0, 1, 3, 4, 9, 10, 12, 22, 28, 31, 48, 51]]
[66, 2.77345, [0, 1, 3, 4, 9, 10, 12, 22, 29, 31, 47, 51]]
[66, 2.76621, [0, 1, 3, 4, 9, 10, 12, 25, 27, 30, 52, 55]]
[66, 2.81665, [0, 1, 3, 4, 9, 10, 13, 21, 24, 28, 30, 31]]
[66, 2.77767, [0, 1, 3, 4, 9, 10, 13, 21, 24, 30, 49, 52]]
[66, 2.81079, [0, 1, 3, 4, 9, 10, 13, 21, 27, 28, 30, 31]]
[66, 2.77182, [0, 1, 3, 4, 9, 10, 13, 21, 27, 30, 49, 52]]
[66, 2.78119, [0, 1, 3, 4, 9, 10, 13, 24, 28, 29, 31, 51]]
[66, 2.78523, [0, 1, 3, 4, 9, 10, 21, 22, 24, 25, 30, 31]]
[66, 2.78127, [0, 1, 3, 4, 9, 10, 21, 22, 24, 28, 29, 31]]
[66, 2.77977, [0, 1, 3, 4, 9, 10, 21, 22, 24, 28, 30, 31]]
[66, 2.77938, [0, 1, 3, 4, 9, 10, 21, 22, 25, 27, 30, 31]]
[66, 2.77392, [0, 1, 3, 4, 9, 10, 21, 22, 27, 28, 30, 31]]
[66, 2.77883, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 29, 31]]
[66, 2.77733, [0, 1, 3, 4, 9, 10, 21, 23, 24, 28, 30, 31]]
[66, 2.77336, [0, 1, 3, 4, 9, 10, 22, 23, 25, 26, 31, 32]]
[66, 2.76966, [0, 1, 3, 4, 9, 10, 22, 23, 25, 29, 30, 32]]
[66, 2.76825, [0, 1, 3, 4, 9, 10, 22, 23, 25, 29, 31, 32]]
[66, 2.7679, [0, 1, 3, 4, 9, 10, 22, 23, 26, 28, 31, 32]]
[66, 2.7628, [0, 1, 3, 4, 9, 10, 22, 23, 28, 29, 31, 32]]
[66, 2.76741, [0, 1, 3, 4, 9, 10, 22, 24, 25, 29, 30, 32]]
[66, 2.766, [0, 1, 3, 4, 9, 10, 22, 24, 25, 29, 31, 32]]
[66, 2.81446, [0, 1, 3, 4, 9, 11, 12, 16, 25, 26, 30, 53]]
[66, 2.7987, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 30, 31]]
[66, 2.77759, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 30, 58]]
[66, 2.79596, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 31, 32]]
[66, 2.77403, [0, 1, 3, 4, 9, 12, 13, 19, 28, 31, 32, 48]]
[66, 2.77786, [0, 1, 3, 4, 9, 12, 16, 19, 25, 27, 30, 40]]
[66, 2.76525, [0, 1, 3, 4, 9, 12, 16, 19, 25, 27, 30, 61]]
[66, 2.76183, [0, 1, 3, 4, 9, 12, 19, 22, 27, 28, 30, 31]]
[66, 2.76318, [0, 1, 3, 4, 9, 13, 19, 21, 24, 28, 30, 31]]
[66, 2.79041, [0, 1, 3, 4, 10, 12, 13, 18, 27, 28, 30, 31]]
[66, 2.76836, [0, 1, 3, 4, 10, 12, 13, 18, 27, 28, 31, 57]]
[66, 2.77073, [0, 1, 3, 4, 10, 12, 13, 18, 27, 29, 30, 52]]
[66, 2.76712, [0, 1, 3, 4, 10, 13, 15, 18, 24, 28, 31, 39]]
[66, 2.8007, [0, 1, 3, 7, 8, 10, 18, 21, 22, 25, 27, 30, 31]]
[66, 2.76449, [0, 1, 4, 6, 9, 10, 13, 21, 23, 24, 28, 30, 31]]

Search completed in 0 hours, 0 minutes, and 0.84 seconds.  Enter a string to quit.