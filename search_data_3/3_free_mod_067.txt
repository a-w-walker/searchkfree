Enter an integer k for which our Kempner sets are k-free: 3
Enter a positive integer modulus b: 67
Enter estimation parameters, or * for pre-computed parameters ([0.0938, 1.1015, 1.4141]): *
Enter a threshold (e.g. 4.2) to determine printed output: 2.78
Enter a root for the search space (e.g. [0, 1, 2]) [or * for the root [0]]: *
Enter an upper bound for the size of allowable digit sets [or * to ignore]: *
Enter a maximal number of deviations from a greedy search [or * to ignore]: *
Searching for k-free sets mod b...

[67, 2.84479, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 30, 31]]
[67, 2.84206, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 31, 32]]
[67, 2.84081, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 31, 33]]
[67, 2.83948, [0, 1, 3, 4, 9, 10, 12, 13, 27, 28, 32, 33]]
[67, 2.84188, [0, 1, 3, 4, 9, 10, 12, 13, 27, 29, 30, 32]]
[67, 2.8379, [0, 1, 3, 4, 9, 10, 12, 13, 27, 29, 32, 33]]
[67, 2.83878, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 31, 32]]
[67, 2.83621, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 32, 33]]
[67, 2.82008, [0, 1, 3, 4, 9, 10, 12, 13, 28, 29, 33, 51]]
[67, 2.83604, [0, 1, 3, 4, 9, 10, 12, 13, 28, 30, 31, 33]]
[67, 2.83314, [0, 1, 3, 4, 9, 10, 12, 13, 29, 30, 32, 33]]
[67, 2.81929, [0, 1, 3, 4, 9, 10, 12, 13, 29, 31, 32, 47]]
[67, 2.81672, [0, 1, 3, 4, 9, 10, 12, 13, 29, 32, 33, 47]]
[67, 2.80059, [0, 1, 3, 4, 9, 10, 12, 13, 29, 33, 47, 51]]
[67, 2.78517, [0, 1, 3, 4, 9, 10, 12, 13, 29, 47, 51, 52]]
[67, 2.80075, [0, 1, 3, 4, 9, 10, 12, 13, 31, 32, 47, 48]]
[67, 2.7995, [0, 1, 3, 4, 9, 10, 12, 13, 31, 33, 47, 48]]
[67, 2.79817, [0, 1, 3, 4, 9, 10, 12, 13, 32, 33, 47, 48]]
[67, 2.79755, [0, 1, 3, 4, 9, 10, 12, 13, 32, 33, 47, 49]]
[67, 2.79691, [0, 1, 3, 4, 9, 10, 12, 13, 32, 33, 48, 49]]
[67, 2.78205, [0, 1, 3, 4, 9, 10, 12, 13, 33, 47, 48, 51]]
[67, 2.78079, [0, 1, 3, 4, 9, 10, 12, 13, 33, 48, 49, 51]]
[67, 2.8168, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 29, 31]]
[67, 2.81134, [0, 1, 3, 4, 9, 10, 12, 22, 25, 26, 31, 33]]
[67, 2.81351, [0, 1, 3, 4, 9, 10, 12, 22, 25, 27, 30, 31]]
[67, 2.80953, [0, 1, 3, 4, 9, 10, 12, 22, 25, 27, 31, 33]]
[67, 2.80477, [0, 1, 3, 4, 9, 10, 12, 22, 25, 30, 31, 33]]
[67, 2.81049, [0, 1, 3, 4, 9, 10, 12, 22, 26, 27, 29, 33]]
[67, 2.8076, [0, 1, 3, 4, 9, 10, 12, 22, 26, 27, 31, 33]]
[67, 2.81137, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 29, 31]]
[67, 2.8088, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 29, 33]]
[67, 2.80591, [0, 1, 3, 4, 9, 10, 12, 22, 26, 28, 31, 33]]
[67, 2.80808, [0, 1, 3, 4, 9, 10, 12, 22, 27, 28, 30, 31]]
[67, 2.8041, [0, 1, 3, 4, 9, 10, 12, 22, 27, 28, 31, 33]]
[67, 2.79934, [0, 1, 3, 4, 9, 10, 12, 22, 28, 30, 31, 33]]
[67, 2.79783, [0, 1, 3, 4, 9, 10, 12, 25, 26, 28, 32, 33]]
[67, 2.78649, [0, 1, 3, 4, 9, 10, 12, 25, 26, 29, 31, 45]]
[67, 2.79608, [0, 1, 3, 4, 9, 10, 12, 25, 26, 30, 31, 33]]
[67, 2.79476, [0, 1, 3, 4, 9, 10, 12, 25, 26, 30, 32, 33]]
[67, 2.78228, [0, 1, 3, 4, 9, 10, 12, 25, 26, 31, 32, 45]]
[67, 2.78103, [0, 1, 3, 4, 9, 10, 12, 25, 26, 31, 33, 45]]
[67, 2.79602, [0, 1, 3, 4, 9, 10, 12, 25, 27, 28, 32, 33]]
[67, 2.80942, [0, 1, 3, 4, 9, 10, 13, 21, 24, 28, 30, 31]]
[67, 2.80359, [0, 1, 3, 4, 9, 10, 13, 21, 27, 28, 30, 31]]
[67, 2.79231, [0, 1, 3, 4, 9, 10, 13, 24, 27, 28, 31, 33]]
[67, 2.7894, [0, 1, 3, 4, 9, 10, 13, 24, 27, 29, 32, 33]]
[67, 2.78755, [0, 1, 3, 4, 9, 10, 13, 24, 28, 30, 31, 33]]
[67, 2.78464, [0, 1, 3, 4, 9, 10, 13, 24, 29, 30, 32, 33]]
[67, 2.81842, [0, 1, 3, 4, 9, 10, 22, 24, 25, 29, 30, 32, 52]]
[67, 2.78526, [0, 1, 3, 4, 9, 10, 22, 24, 29, 30, 32, 52, 62]]
[67, 2.82324, [0, 1, 3, 4, 9, 11, 12, 16, 25, 26, 30, 33]]
[67, 2.78804, [0, 1, 3, 4, 9, 11, 12, 25, 26, 28, 32, 33]]
[67, 2.7863, [0, 1, 3, 4, 9, 11, 12, 25, 26, 30, 31, 33]]
[67, 2.78497, [0, 1, 3, 4, 9, 11, 12, 25, 26, 30, 32, 33]]
[67, 2.78624, [0, 1, 3, 4, 9, 11, 12, 25, 27, 28, 32, 33]]
[67, 2.80222, [0, 1, 3, 4, 9, 11, 20, 25, 27, 28, 32, 33, 59]]
[67, 2.79155, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 30, 31]]
[67, 2.78883, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 31, 32]]
[67, 2.78758, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 31, 33]]
[67, 2.78626, [0, 1, 3, 4, 9, 12, 13, 19, 27, 28, 32, 33]]
[67, 2.78282, [0, 1, 3, 4, 9, 12, 13, 19, 28, 30, 31, 33]]
[67, 2.79831, [0, 1, 3, 4, 10, 11, 13, 14, 29, 30, 32, 33]]
[67, 2.7829, [0, 1, 3, 4, 10, 11, 13, 14, 29, 30, 32, 52]]
[67, 2.7822, [0, 1, 3, 4, 10, 11, 13, 14, 29, 30, 33, 51]]
[67, 2.78065, [0, 1, 3, 4, 10, 11, 13, 14, 29, 32, 33, 49]]
[67, 2.82857, [0, 1, 3, 4, 10, 11, 13, 14, 29, 33, 43, 49, 51]]
[67, 2.8484, [0, 1, 3, 4, 10, 11, 13, 14, 30, 32, 33, 38, 48]]
[67, 2.83271, [0, 1, 3, 4, 10, 11, 13, 14, 30, 32, 38, 48, 52]]
[67, 2.80972, [0, 1, 3, 4, 10, 11, 13, 14, 33, 43, 48, 49, 51]]
[67, 2.8219, [0, 1, 3, 4, 10, 11, 14, 15, 32, 33, 38, 45, 47]]
[67, 2.78729, [0, 1, 3, 4, 10, 11, 23, 24, 26, 30, 31, 33, 53]]
[67, 2.78517, [0, 1, 3, 4, 10, 11, 23, 25, 26, 30, 31, 33, 53]]
[67, 2.7833, [0, 1, 3, 4, 10, 12, 13, 18, 27, 28, 30, 31]]
[67, 2.79096, [0, 1, 3, 4, 11, 13, 14, 20, 30, 32, 33, 38, 48]]
[67, 2.79299, [0, 1, 3, 7, 8, 10, 18, 21, 22, 25, 27, 30, 31]]

Search completed in 0 hours, 0 minutes, and 1.627 seconds.  Enter a string to quit.